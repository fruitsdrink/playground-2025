---
import type { GetStaticPaths } from "astro";

interface User {
  id: number;
  name: string;
  username: string;
  email: string;
  address: Address;
  phone: string;
  website: string;
  company: Company;
}

interface Company {
  name: string;
  catchPhrase: string;
  bs: string;
}

interface Address {
  street: string;
  suite: string;
  city: string;
  zipcode: string;
}

export const getStaticPaths = (async ({ paginate }) => {
  const res = await fetch("https://jsonplaceholder.typicode.com/users");
  const data: User[] = await res.json();
  return paginate(data, { pageSize: 5 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
console.log(page);
---

<main class="content prose">
  <h1>Pagination Example</h1>
  <p>Page {page.currentPage} of {page.lastPage}</p>
  <ul>
    {
      page.data.map((user) => (
        <li>
          <h2>{user.name}</h2>
        </li>
      ))
    }
  </ul>

  <nav class="pagination">
    {page.url.prev && <a href={page.url.prev}>Previous</a>}
    {page.url.next && <a href={page.url.next}>Next</a>}
  </nav>
</main>
